public class SessionSettings {
	public Boolean disableTimeoutWarning;
	public Boolean enableCSPOnEmail;
	public Boolean enableCSRFOnGet;
	public Boolean enableCSRFOnPost;
	public Boolean enableCacheAndAutocomplete;
	public Boolean enableClickjackNonsetupSFDC;
	public Boolean enableClickjackNonsetupUser;
	public Boolean enableClickjackNonsetupUserHeaderless;
	public Boolean enableClickjackSetup;
	public Boolean enableContentSniffingProtection;
	public Boolean enablePostForSessions;
	public Boolean enableSMSIdentity;
	public Boolean enableUpgradeInsecureRequests;
	public Boolean enableXssProtection;
	public Boolean enforceIpRangesEveryRequest;
	public Boolean forceLogoutOnSessionTimeout;
	public Boolean forceRelogin;
	public Boolean hstsOnForcecomSites;
	public Boolean identityConfirmationOnEmailChange;
	public Boolean identityConfirmationOnTwoFactorRegistrationEnabled;
	public Boolean lockSessionsToDomain;
	public Boolean lockSessionsToIp;
	public String logoutURL;
	public Boolean redirectionWarning;
	public Boolean referrerPolicy;
	public Boolean requireHttpOnly;
	public Boolean requireHttps;
	public Boolean securityCentralKillSession;
	public String sessionTimeout;
	private String[] disableTimeoutWarning_type_info = new List<String>{
		'disableTimeoutWarning',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableCSPOnEmail_type_info = new List<String>{
		'enableCSPOnEmail',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableCSRFOnGet_type_info = new List<String>{
		'enableCSRFOnGet',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableCSRFOnPost_type_info = new List<String>{
		'enableCSRFOnPost',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableCacheAndAutocomplete_type_info = new List<String>{
		'enableCacheAndAutocomplete',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableClickjackNonsetupSFDC_type_info = new List<String>{
		'enableClickjackNonsetupSFDC',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableClickjackNonsetupUser_type_info = new List<String>{
		'enableClickjackNonsetupUser',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableClickjackNonsetupUserHeaderless_type_info = new List<String>{
		'enableClickjackNonsetupUserHeaderless',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableClickjackSetup_type_info = new List<String>{
		'enableClickjackSetup',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableContentSniffingProtection_type_info = new List<String>{
		'enableContentSniffingProtection',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enablePostForSessions_type_info = new List<String>{
		'enablePostForSessions',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableSMSIdentity_type_info = new List<String>{
		'enableSMSIdentity',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableUpgradeInsecureRequests_type_info = new List<String>{
		'enableUpgradeInsecureRequests',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enableXssProtection_type_info = new List<String>{
		'enableXssProtection',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] enforceIpRangesEveryRequest_type_info = new List<String>{
		'enforceIpRangesEveryRequest',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] forceLogoutOnSessionTimeout_type_info = new List<String>{
		'forceLogoutOnSessionTimeout',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] forceRelogin_type_info = new List<String>{
		'forceRelogin',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] hstsOnForcecomSites_type_info = new List<String>{
		'hstsOnForcecomSites',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] identityConfirmationOnEmailChange_type_info = new List<String>{
		'identityConfirmationOnEmailChange',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] identityConfirmationOnTwoFactorRegistrationEnabled_type_info = new List<String>{
		'identityConfirmationOnTwoFactorRegistrationEnabled',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] lockSessionsToDomain_type_info = new List<String>{
		'lockSessionsToDomain',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] lockSessionsToIp_type_info = new List<String>{
		'lockSessionsToIp',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] logoutURL_type_info = new List<String>{
		'logoutURL',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] redirectionWarning_type_info = new List<String>{
		'redirectionWarning',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] referrerPolicy_type_info = new List<String>{
		'referrerPolicy',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] requireHttpOnly_type_info = new List<String>{
		'requireHttpOnly',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] requireHttps_type_info = new List<String>{
		'requireHttps',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] securityCentralKillSession_type_info = new List<String>{
		'securityCentralKillSession',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] sessionTimeout_type_info = new List<String>{
		'sessionTimeout',
		SoapConstants.SOAP_M_URI,
		null,
		'0',
		'1',
		'false'
	};
	private String[] apex_schema_type_info = new List<String>{
		SoapConstants.SOAP_M_URI,
		'true',
		'false'
	};
	private String[] field_order_type_info = new List<String>{
		'disableTimeoutWarning',
		'enableCSPOnEmail',
		'enableCSRFOnGet',
		'enableCSRFOnPost',
		'enableCacheAndAutocomplete',
		'enableClickjackNonsetupSFDC',
		'enableClickjackNonsetupUser',
		'enableClickjackNonsetupUserHeaderless',
		'enableClickjackSetup',
		'enableContentSniffingProtection',
		'enablePostForSessions',
		'enableSMSIdentity',
		'enableUpgradeInsecureRequests',
		'enableXssProtection',
		'enforceIpRangesEveryRequest',
		'forceLogoutOnSessionTimeout',
		'forceRelogin',
		'hstsOnForcecomSites',
		'identityConfirmationOnEmailChange',
		'identityConfirmationOnTwoFactorRegistrationEnabled',
		'lockSessionsToDomain',
		'lockSessionsToIp',
		'logoutURL',
		'redirectionWarning',
		'referrerPolicy',
		'requireHttpOnly',
		'requireHttps',
		'securityCentralKillSession',
		'sessionTimeout'
	};
}
